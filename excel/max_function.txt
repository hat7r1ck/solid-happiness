=LET(
    input, A1,
    len, LEN(input),
    chars, MID(input, SEQUENCE(len), 1),
    replace, IF(ISNUMBER(--chars), chars, ","),
    modified, TEXTJOIN("", TRUE, replace),
    split, TEXTSPLIT(modified, , ","),
    numbers, --split,
    filtered, FILTER(numbers, (numbers >= 0) * (numbers <= 100)),
    MAX(IFERROR(filtered, 0))
)


=MAX(IFERROR(FILTER(--TEXTSPLIT(A1, TEXTSPLIT(A1, SEQUENCE(10,,0), , TRUE), 
    (--TEXTSPLIT(A1, TEXTSPLIT(A1, SEQUENCE(10,,0), , TRUE) < 185) * 
    (--TEXTSPLIT(A1, TEXTSPLIT(A1, SEQUENCE(10,,0), , TRUE) >= 0)), 0)


=LET(
    text, A1,
    seq, SEQUENCE(LEN(text)),
    chars, MID(text, seq, 1),
    is_num, ISNUMBER(--chars),
    groups, SCAN(0, is_num, LAMBDA(a,b, IF(b, a+1, 0))),
    max_len, MAX(groups),
    starts, FILTER(seq, groups=1),
    nums, IF(max_len=0, 0,
        DROP(REDUCE("", starts, LAMBDA(a,i,
            VSTACK(a, --MID(text, i, max_len)))), 1)),
    valid_nums, FILTER(nums, (nums < 185) * (nums >= 0)),
    MAX(IFERROR(valid_nums, 0))
)


=LET(
    text, SUBSTITUTE(SUBSTITUTE(A1, CHAR(160), " "),  // Remove hidden spaces
    len, LEN(text),
    chars, MID(text, SEQUENCE(len), 1),
    is_num, ISNUMBER(--chars),
    group_id, SCAN(0, is_num, LAMBDA(a,b, IF(b, a+1, 0))),
    max_group, MAX(group_id),
    starts, FILTER(SEQUENCE(len), group_id=1),
    nums, IF(max_group=0, {0},
        --MID(text, starts, max_group)),
    valid_nums, FILTER(nums, (nums < 185) * (nums >= 0)),
    MAX(IFERROR(valid_nums, 0))


=LET(
    clean_text, SUBSTITUTE(SUBSTITUTE(A1, CHAR(160), " "),  // Remove hidden spaces
    text_len, LEN(clean_text),
    char_array, MID(clean_text, SEQUENCE(text_len), 1),
    is_digit, ISNUMBER(--char_array),
    
    // Group consecutive digits
    digit_groups, SCAN(0, is_digit, LAMBDA(a, b, IF(b, a + 1, 0))),
    max_group_size, MAX(digit_groups),
    
    // Extract full numbers
    number_starts, FILTER(SEQUENCE(text_len), digit_groups = 1),
    all_numbers, IF(max_group_size = 0, {0},
        --MID(clean_text, number_starts, max_group_size)),
    
    // Filter valid numbers (0 â‰¤ num < 185)
    valid_numbers, FILTER(all_numbers, (all_numbers < 185) * (all_numbers >= 0)),
    
    // Return the highest valid number (or 0 if none)
    MAX(IFERROR(valid_numbers, 0))
)

=MAX(IFERROR(--TEXTSPLIT(TEXTJOIN(",", TRUE, 
   IF(ISNUMBER(--MID(A1, SEQUENCE(LEN(A1)), 1)), 
   MID(A1, SEQUENCE(LEN(A1)), 1), ",")), "") * 
   (--TEXTSPLIT(TEXTJOIN(",", TRUE, 
   IF(ISNUMBER(--MID(A1, SEQUENCE(LEN(A1)), 1)), 
   MID(A1, SEQUENCE(LEN(A1)), 1), ","), "") < 185), 0)
