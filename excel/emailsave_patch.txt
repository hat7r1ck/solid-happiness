Option Explicit


Sub GenerateEmailFromTemplate()
    ' --- Configuration ---
    Const CONTROL_SHEET As String = "Control Panel"
    Const INPUT_SHEET As String = "Email Input"
    Const TEMPLATE_SHEET As String = "Templates"
    Const IMAGE_SHEET As String = "Images"
    Const HTML_BODY_COL As Integer = 5 ' Column E

    ' --- Declarations ---
    Dim olApp As Object, olMail As Object
    Dim wsControl As Worksheet, wsInput As Worksheet, wsTemplates As Worksheet, wsImages As Worksheet
    Dim selectedTemplate As String, emailSubject As String, emailTo As String, emailCc As String, htmlBody As String
    Dim tempImageFolder As String, tempImagePath As String
    Dim shp As Shape
    Dim i As Long
    Dim templateFound As Boolean

    ' --- Main Error Handler ---
    On Error GoTo ErrorHandler

    ' --- Setup & Validation ---
    Application.ScreenUpdating = False
    Set wsControl = ThisWorkbook.Sheets(CONTROL_SHEET)
    Set wsInput = ThisWorkbook.Sheets(INPUT_SHEET)
    Set wsTemplates = ThisWorkbook.Sheets(TEMPLATE_SHEET)
    Set wsImages = ThisWorkbook.Sheets(IMAGE_SHEET)

    selectedTemplate = wsControl.Range("C4").Value
    If IsEmpty(selectedTemplate) Or selectedTemplate = "" Then
        MsgBox "Please select an email template from the dropdown on the 'Control Panel' sheet.", vbExclamation, "Template Not Selected"
        GoTo Cleanup
    End If

    ' --- Find and Load the Email Template ---
    templateFound = False
    For i = 2 To wsTemplates.Cells(wsTemplates.Rows.Count, "A").End(xlUp).Row
        If wsTemplates.Cells(i, 1).Value = selectedTemplate Then
            emailSubject = wsTemplates.Cells(i, 2).Value
            emailTo = wsTemplates.Cells(i, 3).Value
            emailCc = wsTemplates.Cells(i, 4).Value
            htmlBody = wsTemplates.Cells(i, HTML_BODY_COL).Value
            templateFound = True
            Exit For
        End If
    Next i

    If Not templateFound Then
        MsgBox "The selected template '" & selectedTemplate & "' could not be found.", vbCritical, "Template Mismatch"
        GoTo Cleanup
    End If
    
    If Len(Trim(htmlBody)) = 0 Then
        MsgBox "The HTMLBody for template '" & selectedTemplate & "' is empty in the 'Templates' sheet.", vbCritical, "Empty Template Body"
        GoTo Cleanup
    End If

    ' --- Create Outlook Instance and Email Item ---
    On Error Resume Next
    Set olApp = GetObject(, "Outlook.Application")
    If olApp Is Nothing Then Set olApp = CreateObject("Outlook.Application")
    On Error GoTo ErrorHandler
    Set olMail = olApp.CreateItem(0)

    ' --- *** NEW LOGIC: LOAD TEMPLATE IMMEDIATELY FOR RESILIENCE *** ---
    With olMail
       .To = emailTo
       .CC = emailCc
       .Subject = emailSubject
       .HTMLBody = htmlBody ' Load the raw template first. This guarantees the body is never blank.
    End With

    ' --- Create a temporary folder for images ---
    tempImageFolder = Environ("TEMP") & "\" & Format(Now, "yyyy-mm-dd_hh-mm-ss")
    MkDir tempImageFolder

    ' --- Process Placeholders ---
    For i = 2 To wsInput.Cells(wsInput.Rows.Count, "A").End(xlUp).Row
        If wsInput.Cells(i, 1).Value = selectedTemplate Then
            ' Use local error handling to skip any single placeholder that fails
            On Error Resume Next
            
            Dim placeholderType As String, placeholderName As String, replacementValue As String
            placeholderType = wsInput.Cells(i, 2).Value
            placeholderName = wsInput.Cells(i, 3).Value
            replacementValue = wsInput.Cells(i, 4).Value
            
            If placeholderName <> "" Then
                If LCase(placeholderType) = "image" Then
                    Set shp = wsImages.Shapes(placeholderName)
                    If Not shp Is Nothing Then
                        tempImagePath = tempImageFolder & "\" & placeholderName & ".png"
                        shp.CopyPicture Appearance:=xlScreen, Format:=xlPicture
                        Dim cht As ChartObject
                        Set cht = wsImages.ChartObjects.Add(0, 0, shp.Width, shp.Height)
                        With cht
                         .Chart.Paste
                         .Chart.Export tempImagePath, "PNG"
                         .Delete
                        End With
                        olMail.Attachments.Add tempImagePath
                        Set shp = Nothing
                    End If
                Else ' Assumes "Text"
                    ' Replace directly in the email body. If replacementValue is blank, it removes the placeholder.
                    olMail.HTMLBody = Replace(olMail.HTMLBody, placeholderName, replacementValue, 1, -1, vbTextCompare)
                End If
            End If
            
            ' Clear any error from this specific placeholder and continue
            If Err.Number <> 0 Then Err.Clear
        End If
    Next i
    
    ' --- Restore Main Error Handler ---
    On Error GoTo ErrorHandler

    ' --- Finalize and Display the Email ---
    olMail.Display
    
    MsgBox "Email '" & selectedTemplate & "' has been generated successfully.", vbInformation, "Success"

' --- Cleanup ---
Cleanup:
    Application.ScreenUpdating = True
    If Dir(tempImageFolder, vbDirectory) <> "" Then
        On Error Resume Next
        Kill tempImageFolder & "\*.*"
        RmDir tempImageFolder
        On Error GoTo 0
    End If
    Set olMail = Nothing
    Set olApp = Nothing
    Set wsControl = Nothing
    Set wsInput = Nothing
    Set wsTemplates = Nothing
    Set wsImages = Nothing
    Exit Sub

' --- Error Handling Section ---
ErrorHandler:
    MsgBox "A critical error occurred and the process had to stop." & vbCrLf & vbCrLf & _
           "Error Number: " & Err.Number & vbCrLf & _
           "Error Description: " & Err.Description, vbCritical, "VBA Error"
    GoTo Cleanup
End Sub
